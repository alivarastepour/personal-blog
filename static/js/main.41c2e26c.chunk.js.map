{"version":3,"sources":["Components/Spinner/Spinner.styles.ts","Components/Spinner/index.tsx","App.js","globalStates/slice.js","globalStates/store.js","index.js"],"names":["Wrapper","styled","div","Content","Spinner","theme","localStorage","getItem","toLowerCase","className","Header","lazy","About","ContactUs","Introduction","Skills","languageContext","createContext","App","useState","language","setLanguage","doFetch","a","fetch","then","json","b","location","country","useSelector","state","value","useEffect","fallback","Provider","mySlice","createSlice","name","initialState","reducers","changeTheme","action","payload","setItem","actions","configureStore","reducer","themeReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"oOAEaA,EAAUC,IAAOC,IAAV,iGAMPC,EAAUF,IAAOC,IAAV,6Q,eCKLE,EARC,WAAO,IAAD,EACZC,EAAK,UAAGC,aAAaC,QAAQ,gBAAxB,aAAG,EAA+BC,cAC7C,OAAO,mCACH,cAACR,EAAD,CAASS,UAAS,kBAAaJ,EAAK,kBAAcA,GAAd,mBAApC,SACQ,cAACF,EAAD,CAASM,UAAS,kBAAaJ,EAAK,kBAAcA,GAAd,0BCJ9CK,EAASC,gBAAK,kBAAM,gCACpBC,EAAQD,gBAAK,kBAAM,gCACnBE,EAAYF,gBAAK,kBAAM,gCAEvBG,EAAeH,gBAAK,kBAAM,gCAC1BI,EAASJ,gBAAK,kBAAM,gCAKbK,EAAkBC,0BAkChBC,IAhCf,WAAgB,IAAD,EACb,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAO,uCAAG,sBAAAC,EAAA,sEACRC,MARR,gFASKC,MAAK,SAACF,GAAD,OAAOA,EAAEG,UACdD,MAAK,SAACE,GAAD,aAAON,EAAW,OAACM,QAAD,IAACA,GAAD,UAACA,EAAGC,gBAAJ,aAAC,EAAaC,YAH1B,2CAAH,qDAMPxB,EAAK,UAAGyB,aAAY,SAACC,GAAD,OAAWA,EAAM1B,MAAM2B,gBAAtC,aAAG,EAA2CxB,cAKzD,OAJAyB,qBAAU,WACRX,MACC,IAGD,mCACE,cAAC,WAAD,CAAUY,SAAU,cAAC,EAAD,IAApB,SACE,cAAClB,EAAgBmB,SAAjB,CAA0BH,MAAO,CAAEZ,WAAUC,eAA7C,SACE,sBAAKZ,UAAS,cAASJ,EAAK,cAAUA,GAAV,eAA5B,UACE,cAACK,EAAD,IACA,cAACI,EAAD,IACA,cAACF,EAAD,IACA,cAACG,EAAD,IACA,cAACF,EAAD,e,2ICtCCuB,EAAUC,YAAY,CAC/BC,KAAM,QACNC,aAAc,CACVP,MAAO1B,aAAaC,QAAQ,UAEhCiC,SAAW,CACPC,YAAc,SAACV,EAAOW,GAClBX,EAAMC,MAAQU,EAAOC,QACrBrC,aAAasC,QAAQ,QAASF,EAAOC,aAMlCP,GADcA,EAAQS,QAAvBJ,YACCL,EAAf,SCdeU,cAAe,CAC1BC,QAAQ,CAAC1C,MAAM2C,K,OCGnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACI,cAAClC,EAAA,EAAD,QAGRmC,SAASC,eAAe,W","file":"static/js/main.41c2e26c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    width: 100px;\r\n    height: 100px;\r\n    border-bottom: none ;\r\n    animation: 3s spin infinite linear;\r\n    border-radius: 50% ;\r\n    @keyframes spin {\r\n        0%{transform: rotate(0deg)}\r\n        100%{transform: rotate(360deg)}\r\n    }\r\n`;","import { Wrapper, Content } from \"./Spinner.styles\";\r\nimport './styles.scss'\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    const theme = localStorage.getItem('theme')?.toLowerCase();    \r\n    return <>\r\n        <Wrapper className={`wrapper ${theme ? `wrapper-${theme}` : `wrapper-default`}`}>\r\n                <Content className={`content ${theme ? `content-${theme}` : `content-default`}`}/>\r\n        </Wrapper>\r\n    </>\r\n}\r\nexport default Spinner;","import { createContext, lazy, Suspense, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./sample.scss\";\r\nimport Spinner from \"./Components/Spinner\";\r\n\r\nconst Header = lazy(() => import(\"./Components/Header\"));\r\nconst About = lazy(() => import(\"./Components/About\"));\r\nconst ContactUs = lazy(() => import(\"./Components/Contact-us\"));\r\nconst Footer = lazy(() => import(\"./Components/Footer\"));\r\nconst Introduction = lazy(() => import(\"./Components/Introduction/index.tsx\"));\r\nconst Skills = lazy(() => import(\"./Components/Skills\"));\r\n\r\nconst URL =\r\n  \"https://geo.ipify.org/api/v2/country?apiKey=at_vWj6GggURobnxNbvqBwg8heA5ewma\";\r\n\r\nexport const languageContext = createContext();\r\n\r\nfunction App() {\r\n  const [language, setLanguage] = useState();\r\n\r\n  const doFetch = async () => {\r\n    await fetch(URL)\r\n      .then((a) => a.json())\r\n      .then((b) => setLanguage(b?.location?.country));\r\n  };\r\n\r\n  const theme = useSelector((state) => state.theme.value)?.toLowerCase();\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<Spinner />}>\r\n        <languageContext.Provider value={{ language, setLanguage }}>\r\n          <div className={`App ${theme ? `App-${theme}` : `App-default`}`}>\r\n            <Header />\r\n            <Introduction />\r\n            <About />\r\n            <Skills />\r\n            <ContactUs />\r\n            {/* <Footer /> */}\r\n          </div>\r\n        </languageContext.Provider>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nexport const mySlice = createSlice({\r\n    name: 'theme',\r\n    initialState: {\r\n        value: localStorage.getItem('theme')\r\n    },\r\n    reducers : {\r\n        changeTheme : (state, action) => {\r\n            state.value = action.payload;\r\n            localStorage.setItem('theme', action.payload);\r\n        }\r\n    }\r\n})\r\n\r\nexport const {changeTheme} = mySlice.actions\r\nexport default mySlice.reducer","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport themeReducer from './slice'\r\nexport default configureStore({\r\n    reducer:{theme:themeReducer},\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./globalStates/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}